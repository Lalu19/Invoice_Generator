@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;
@{
    ViewBag.Title = "Invoice";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");

}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-file-text mr-1"></i>User Console</a></li>
        <li class="breadcrumb-item active" aria-current="page">Invoice List</li>
    </ol>
    <div class="ml-auto">
        <a href="~/Invoice/InvoiceCreate" class="btn btn-primary btn-icon btn-sm text-white mr-2">
            <span>
                <i class="fe fe-plus"></i>
            </span> Add New
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Invoice List</div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="Stability_Tb" class="table table-striped table-bordered nowrap dataTable no-footer dtr-inline" style="width:100%">
                        <thead>
                            <tr>
                                <th>Invoice</th>
                                <th>Invoice No</th>
                                <th>Bill from </th>
                                <th>Bill To </th>
                                <th>Invoice Date</th>
                                <th>Due Date</th>
                                <th>Payment Term</th>
                                <th>PO Number</th>
                                <th>Subtotal</th>
                                <th>Discounts</th>
                                <th>Vat</th>
                                <th>GrandTotal</th>
                                <th>AmountPaid</th>
                                <th>BalanceDue</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>

        //List
        loadSingleLTlist()
        async function loadSingleLTlist() {
            var table = $('#Stability_Tb').DataTable();
            table.destroy();
            table = $('#Stability_Tb').dataTable({
                "paginationType": "full_numbers",
                "dom": 'Bfrtip',
                "buttons": ['csv', 'excel'],
                "searching": true,
                "paging": true,
                "sort": true,
                "info": true,
                "ajax": {
                    "url": '@apiUrl/api/Invoice/InvoiceListbyuserid/' + @Context.Session.GetInt32("UserId"),
                    "type": "GET",
                    "dataType": "json",
                    "headers": {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    "error": function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                },
                "order": [],
                "columns": [
                   
                    {
                        "render": function (data, type, row) {
                            return '<a class="btn btn-sm btn-danger" href="../Invoice/Invoic?invoiceId=' + row.invoiceId + '"><i class="fas fa-file-pdf"></i></a>';

                        }
                    },
                    { "data": "invoiceNo", "orderable": true, "visible": true },
                    { "data": "billFrom", "orderable": true, "visible": true },
                    { "data": "billTo", "orderable": true, "visible": true },
                    {
                        "data": "invoiceDate",
                        "render": function (data) {
                            if (data === null) return "";
                            var date = new Date(data);
                            var day = date.getDate();
                            var month = date.getMonth() + 1;
                            var year = date.getFullYear();
                            var hour = date.getHours();
                            var amOrPm = hour >= 12 ? "PM" : "AM";

                            // Convert 24-hour format to 12-hour format
                            if (hour > 12) {
                                hour = hour - 12;
                            } else if (hour === 0) {
                                hour = 12;
                            }
                            return (
                                (day < 10 ? "0" + day : day) +
                                "/" +
                                (month < 10 ? "0" + month : month) +
                                "/" +
                                year.toString().substring(2) +
                                "&nbsp;&nbsp;" +
                                (hour < 10 ? "0" + hour : hour) +
                                ":" +
                                (date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes()) +
                                " " +
                                amOrPm
                            );
                        }
                    },
                    {
                        "data": "dueDate",
                        "render": function (data) {
                            if (data === null) return "";
                            var date = new Date(data);
                            var day = date.getDate();
                            var month = date.getMonth() + 1;
                            var year = date.getFullYear();
                            var hour = date.getHours();
                            var amOrPm = hour >= 12 ? "PM" : "AM";

                            // Convert 24-hour format to 12-hour format
                            if (hour > 12) {
                                hour = hour - 12;
                            } else if (hour === 0) {
                                hour = 12;
                            }
                            return (
                                (day < 10 ? "0" + day : day) +
                                "/" +
                                (month < 10 ? "0" + month : month) +
                                "/" +
                                year.toString().substring(2) +
                                "&nbsp;&nbsp;" +
                                (hour < 10 ? "0" + hour : hour) +
                                ":" +
                                (date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes()) +
                                " " +
                                amOrPm
                            );
                        }
                    },

                    { "data": "paymentTerm", "orderable": true, "visible": true },
                    { "data": "poNumber", "orderable": true, "visible": true },
                    { "data": "subTotal", "orderable": true, "visible": true },
                    { "data": "discounts", "orderable": true, "visible": true },
                    { "data": "vat", "orderable": true, "visible": true },
                    { "data": "grandTotal", "orderable": true, "visible": true },
                    { "data": "amountPaid", "orderable": true, "visible": true },
                    { "data": "balanceDue", "orderable": true, "visible": true },

                ]
            });
        }

        // //Delete
        // $('#Stability_Tb tbody').on('click', 'button[data-target="#delete"]', function () {
        //     var id = $(this).data('id');
        //     swal({
        //         html: true,
        //         title: "Are you sure?",
        //         text: "You will not be able to recover this data!",
        //         type: "warning",
        //         showCancelButton: true,
        //         confirmButtonColor: "#DD6B55",
        //         confirmButtonText: "Yes, confirm it!",
        //         closeOnConfirm: false
        //     }, function () {
        //         $.ajax({
        //             type: "GET",
        //             url: "@apiUrl/api/StabilityCertificate/DeleteCategory/" + id + "/" + @Context.Session.GetInt32("UserId"),
        //             contentType: "application/json; charset=utf-8",
        //             headers: {
        //                 "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
        //             },
        //             dataType: "json",
        //             success: function (data, statusText, xhr) {
        //                 if (xhr.status == 200) {
        //                     $('#Stability_Tb').DataTable().ajax.reload(null, false);
        //                     sweetAlert({
        //                         html: true,
        //                         title: "Certificate Of Stability",
        //                         text: "Successfully deleted!",
        //                         type: "success"
        //                     });
        //                 } else if (xhr.status == 202) {
        //                     sweetAlert("Validation Alert!", data.responseMsg, "warning");
        //                 } else {
        //                     sweetAlert("Validation Alert!", "Something unexpected!", "warning");
        //                 }
        //             },
        //             error: function (data) {
        //                 if (data.status == 401) {
        //                     window.location.replace('/Message/TokenExpire');
        //                 } else if (data.status == 403) {
        //                     window.location.replace('/Message/Unauthorize');
        //                 }
        //             }
        //         });
        //     });
        // });
    </script>
}