#pragma checksum "D:\Invoice\AdminClient\Views\Invoice\Invoice.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "55090e69c4da89ffbdffffe4eb77508ecbb5a873"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Invoice_Invoice), @"mvc.1.0.view", @"/Views/Invoice/Invoice.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Invoice\AdminClient\Views\Invoice\Invoice.cshtml"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Invoice\AdminClient\Views\Invoice\Invoice.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55090e69c4da89ffbdffffe4eb77508ecbb5a873", @"/Views/Invoice/Invoice.cshtml")]
    #nullable restore
    public class Views_Invoice_Invoice : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "D:\Invoice\AdminClient\Views\Invoice\Invoice.cshtml"
  
    ViewBag.Title = "Invoice";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
	Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        <style>

*
{
	border: 0;
	box-sizing: content-box;
	color: inherit;
	font-family: inherit;
	font-size: inherit;
	font-style: inherit;
	font-weight: inherit;
	line-height: inherit;
	list-style: none;
	margin: 0;
	padding: 0;
	text-decoration: none;
	vertical-align: top;
}

*[contenteditable] { border-radius: 0.25em; min-width: 0em; outline: 0; }

*[contenteditable] { cursor: pointer; }

*[contenteditable]:hover, *[contenteditable]:focus, td:hover *[contenteditable], td:focus *[contenteditable], img.hover {  box-shadow: 0 0 1em 0.5em; }

span[contenteditable] { display: inline-block; }

h1 { font:  100% sans-serif;  text-align: center; text-transform: uppercase; }

table { font-size: 75%; table-layout: fixed; width: 100%; }
table { border-collapse: separate; border-spacing: 0px; }
th, td { border-width: 0px; padding: 0.5em; position: relative; text-align: left; }
th, td { border-radius: 0.25em; border-style: solid; }

.bd{
	font-weight: bold;
}

tbody{
    text-ali");
            WriteLiteral(@"gn: center !important;
}

th.tc{
    background: #EEE; border-color: #BBB; 
}

#ttar{
    text-align: right;
}

#ttal{
    text-align: left;
}


.bs{
	font-size: 100%;
}
.bn{
	font-weight: 125%;
}


html { font: 16px/1 'Open Sans', sans-serif; overflow: auto; padding: 0.5in; }
html { background: #999; cursor: default; }

body { box-sizing: border-box; height: 11in; margin: 0 auto; overflow: hidden; padding: 0.5in; width: 8.5in; }
body { background: #FFF; border-radius: 1px; box-shadow: 0 0 1in -0.25in rgba(0, 0, 0, 0.5); }

header { margin: 0 0 3em; }
header:after { clear: both; content: """"; display: table; }

header h1 {  border-radius: 0.25em;  margin: 0 0 1em; padding: 0.5em 0; }
header address { float: left; font-size: 75%; font-style: normal; line-height: 1.25; margin: 0 1em 1em 0; }
header address p { margin: 0 0 0.25em; }
header span, header img { display: block; float: right; }
header span { margin: 0 0 1em 1em; max-height: 25%; max-width: 60%; position: absolute; ");
            WriteLiteral(@"}
header img { max-height: 100%; max-width: 100%; margin-right: 210px;}

article, article address, table.meta, table.inventory { margin: 0 0 3em; }
article:after { clear: both; content: """"; display: table; }
article h1 { clip: rect(0 0 0 0); position: absolute; }

article address { float: left; font-size: 100%;  }

table.meta, table.balance { float: right; width: 36%; }
table.meta:after, table.balance:after { clear: both; content: """"; display: table; }

table.meta th { width: 40%; }
table.meta td { width: 60%; }




div.topr{
    text-align: right;
	font-size: 150%;
}



table.inventory { clear: both; width: 100%; }
table.inventory th { font-weight: bold; text-align: center; }

table.inventory td:nth-child(1) { width: 26%; }
table.inventory td:nth-child(2) { width: 38%; }
table.inventory td:nth-child(3) { text-align: right; width: 12%; }
table.inventory td:nth-child(4) { text-align: right; width: 12%; }
table.inventory td:nth-child(5) { text-align: right; width: 12%; }

table");
            WriteLiteral(".balance th, table.balance td { width: 50%; }\r\ntable.balance td { text-align: right; }\r\n\r\naside h1{\r\n    text-align: left;\r\n\tfont-size: 90%;\r\n}\r\naside p{\r\n\tfont-size: 80%;\r\n}\r\n");
            WriteLiteral(@"@page { margin: 0; }

        </style>
	
		<header>
            <span>
                <img src=""https://w7.pngwing.com/pngs/607/104/png-transparent-googleplex-google-logo-google-search-oliver-atom-text-logo-business.png"" alt=""w7.pngwing.com"" height=""50px"" width=""60px"">
                
            </span>
            <div class=""topr"">
                <tr>
                <th>INVOICE </th>
                <br>
            <td><span id=""invoice""># 1</span></td>
            </tr>
        </div>
		</header>
		<article>
			<address >
                <br>
                <th class=""bn"">Bill from:-<br>&nbsp;</th>
                <td class=""bs""><span id=""bill"">appman</span></td>
                <br>
                <br>
                <th class=""bn"">Bill to:-<br>&nbsp;</th>
        <td class=""bs""><span id=""billto"">Finnosis</span></td>
			</address>
			<table class=""meta"">
				<tr>
					<th><span >Date :</span></th>
					<td><span id=""date"">January 1, 2012</span></td>
				</tr>
     ");
            WriteLiteral(@"           <tr>
					<th><span >Payment Terms :</span></th>
					<td><span id=""terms"">Payment Terms</span></td>
				</tr>
                <tr>
					<th><span >Due Date :</span></th>
                    <td><span id=""duedate"">Sep 15, 2023</span></td>
				</tr>
                <tr>
					<th><span >PO Number :</span></th>
					<td><span id=""po"">PO123</span></td>
				</tr>
				<tr>
					<th class=""bd""><span >Balance Due :</span></th>
					<td><span id=""prefix"" >₹</span><span id=""balance"">988.29</span></td>
				</tr>
			</table>
			<table class=""inventory"">
				<thead>
					<tr>
						<th id=""ttal"" class=""tc""><span >Item</span></th>
						<th id=""ttar"" class=""tc""><span >Quantity</span></th>
                        <th id=""ttar"" class=""tc""><span >Rate</span></th>
						<th id=""ttar"" class=""tc""><span >Price</span></th>
					</tr>
				</thead>
                 <tbody id=""secondtable"">
					<tr>
                        <td>Mobile </td></td>
						<td><span >1</span></td>
                 ");
            WriteLiteral(@"       <td><span data-prefix>₹</span><span >1,000.00 </span></td>
						<td><span data-prefix>₹</span><span>1,000.00 </span></td>
					</tr>
				</tbody>
			</table>
			
			<table class=""balance"">
				<tr>
					<th><span >Subtotal :</span></th>
					<td><span data-prefix>₹</span><span id=""subtot"">0.00</span></td>
				</tr>
				<tr>
					<th><span >Discount (5%) :</span></th>
					<td><span data-prefix>₹</span><span id=""discount"">0.00</span></td>
				</tr>
				<tr>
					<th><span >Vat (3%) :</span></th>
					<td><span data-prefix>₹</span><span id=""vat"">0.00</span></td>
				</tr>
                <tr>
					<th><span >Grand Total :</span></th>
					<td><span data-prefix>₹</span><span id=""gt"">0.00</span></td>
				</tr>
                <tr>
					<th><span >Amount Paid :</span></th>
					<td><span data-prefix>₹</span><span id=""ap"">0.00</span></td>
				</tr>
                <tr>
					<th class=""bd""><span >Balance Due :</span></th>
					<td><span data-prefix>₹</span><span id=""bd"">0.00</spa");
            WriteLiteral(@"n></td>
				</tr>
			</table>
		</article>
		<aside>
			<div><h1><span >Notes :</span></h1></div>
			<div >
				<p id=""notes"">A finance charge of 1.5% will be made on unpaid balances after 30 days.</p>
			</div>
			&nbsp;
            <div><h1><span >Terms :</span></h1></div>
			<div>
				<p id=""tm"">A finance charge of 1.5% will be made on unpaid balances after 30 days.</p>
			</div>
		</aside>
<div class=""corner""><img src=""https://chart.googleapis.com/chart?cht=qr&chl=Hello+World&chs=160x160&chld=L|0"" class=""qr-code img-thumbnail img-responsive""></div>
");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n\t<script>\r\n\t\tfunction generateQRCode() {\r\n\t\t\tvar transportCertificateId = ");
#nullable restore
#line 242 "D:\Invoice\AdminClient\Views\Invoice\Invoice.cshtml"
                                    Write(ViewBag.transportCertificateId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"; // Ensure this variable is correctly defined and contains the ID
			var linkdata = 'http://login.natsolutions.in/Certificate/CertificateofTransport?transportCertificateId=' + transportCertificateId;

			// Generate the QR code
			const qrCodeURL = 'https://chart.googleapis.com/chart?cht=qr&chl=' + encodeURIComponent(linkdata) + '&chs=300x300&chld=L|0';

			// Update the QR code image source
			$("".qr-code"").attr(""src"", qrCodeURL);

		}
		generateQRCode();
	</script>
    <script>
        var invoiceId = ");
#nullable restore
#line 255 "D:\Invoice\AdminClient\Views\Invoice\Invoice.cshtml"
                   Write(ViewBag.invoiceId);

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n\r\n        loadInvoice()\r\n        function loadInvoice() {\r\n            $.ajax({\r\n                type: \"GET\",\r\n                url: \"");
#nullable restore
#line 261 "D:\Invoice\AdminClient\Views\Invoice\Invoice.cshtml"
                 Write(apiUrl);

#line default
#line hidden
#nullable disable
                WriteLiteral("/api/Invoice/GetInvoiceSingleList/\" + invoiceId,\r\n                contentType: \"application/json; charset=utf-8\",\r\n                headers: {\r\n                    \"authorization\": \"Bearer ");
#nullable restore
#line 264 "D:\Invoice\AdminClient\Views\Invoice\Invoice.cshtml"
                                        Write(Context.Session.GetString("TokenTxt"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"""
                },
                dataType: ""json"",
                success: function (data) {
                    //console.log(data);
                    if (data) {
                        $('#invoice').text(data.data[0].d);
                        $('#bill').text(data.data[0].billFrom);
                        $('#billto').text(data.data[0].billTo);
                        $('#terms').text(data.data[0].paymentTerm);
                        $('#po').text(data.data[0].poNumber);
                        $('#balance').text(data.data[0].balanceDue);
                        $('#subtot').text(data.data[0].subTotal);
                        $('#discount').text(data.data[0].discounts);
                        $('#vat').text(data.data[0].vat);
                        $('#gt').text(data.data[0].grandTotal);
                        $('#ap').text(data.data[0].amountPaid);
                        $('#bd').text(data.data[0].balanceDue);
                        $('#notes').text(data.data[0].note);
 ");
                WriteLiteral(@"                       $('#tm').text(data.data[0].terms);
                        //date
                        var dateString = data.data[0].invoiceDate;
                        var invoiceDate = new Date(dateString);
                        var formattedDate = (""0"" + invoiceDate.getDate()).slice(-2) + ""/"" +
                            (""0"" + (invoiceDate.getMonth() + 1)).slice(-2) + ""/"" +
                            invoiceDate.getFullYear();

                        $('#date').text(formattedDate);

                        //duedate
                        var dateString = data.data[0].dueDate;
                        var dueDate = new Date(dateString);
                        var formattedDate = (""0"" + dueDate.getDate()).slice(-2) + ""/"" +
                            (""0"" + (dueDate.getMonth() + 1)).slice(-2) + ""/"" +
                            dueDate.getFullYear();
                        $('#duedate').text(formattedDate);

                        var invoiceId = data.data[0].invoiceId;");
                WriteLiteral(@"
                        fetchsubInvoiceDetails(invoiceId);
                        //generateQRCode(data.data[0]);
                    }
                    else {
                        sweetAlert(""Validation Alert!"", ""Something unexpected!"", ""warning"");
                    }
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

        function fetchsubInvoiceDetails(invoiceId) {

            $.ajax({
                type: ""GET"",
                url: """);
#nullable restore
#line 323 "D:\Invoice\AdminClient\Views\Invoice\Invoice.cshtml"
                 Write(apiUrl);

#line default
#line hidden
#nullable disable
                WriteLiteral("/api/Invoice/GetSubInvoiceListbyinvoiceId/\" + invoiceId,\r\n                contentType: \"application/json; charset=utf-8\",\r\n                headers: {\r\n                    \"authorization\": \"Bearer ");
#nullable restore
#line 326 "D:\Invoice\AdminClient\Views\Invoice\Invoice.cshtml"
                                        Write(Context.Session.GetString("TokenTxt"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"""
                },
                dataType: ""json"",
                success: function (data) {
                    console.log(data);
                    var x = """";
                    for (var i = 0; i < data.data.length; i++) {

                        x = x + '<tr><td>' + data.data[i].itemDetails + '</td><td>' + data.data[i].quantity + '</td><td>' + data.data[i].rate + '</td><td>' + data.data[i].totalAmount + '</td></tr>';
                    }

                    $('#secondtable').html(x);
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

        
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IConfiguration Configuration { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
